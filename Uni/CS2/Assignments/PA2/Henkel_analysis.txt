For reading the input, the three integers take O(1) time, reading the matrix takes O(M * N) time, and reading S amount of words takes O(S) time. After this, searching has O(M * N) iterations, recursively calling search which has the possibility to explore every adjacent cell. Therefore, the worst case time complexity for searching is O(8^k), where k is the word length. Printing the matrix iterates through each cell, so it has the same complexity as reading the matrix which is O(M * N). Overall, the final time complexity of my code is O(S * M * N * 8^k) where S is the number of words, M is the number of rows, N is the number of columns, and k is the maximum length of any given word.